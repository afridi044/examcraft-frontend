# =============================================================================
# ExamCraft Frontend - Production Docker Compose
# =============================================================================
# This Docker Compose configuration is optimized for production with:
# - Resource limits and security configurations
# - Production-grade logging and monitoring
# - Proper restart policies and health checks
# - Optimized networking and performance settings
# =============================================================================

version: '3.8'

services:
  # ---------------------------------------------------------------------------
  # ExamCraft Frontend Service - Production
  # ---------------------------------------------------------------------------
  examcraft-frontend:
    # Use production Dockerfile
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    
    # Production container name
    container_name: examcraft-frontend-prod
    
    # Port mapping (host:container)
    ports:
      - "3000:3000"
    
    # Production environment variables
    environment:
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
      - PORT=3000
      - HOSTNAME=0.0.0.0
      # Supabase configuration (loaded from .env.production)
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
    
    # Production environment file
    env_file:
      - .env.production
    
    # Resource limits for production
    deploy:
      resources:
        limits:
          # Limit CPU usage (1 CPU core max)
          cpus: '1.0'
          # Limit memory usage (1GB max)
          memory: 1G
        reservations:
          # Reserve minimum resources
          cpus: '0.25'
          memory: 256M
      # Restart policy for high availability
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    
    # Production restart policy
    restart: unless-stopped
    
    # Security configurations
    security_opt:
      - no-new-privileges:true
    
    # Read-only root filesystem for security
    read_only: true
    
    # Temporary filesystems for writable directories
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
      - /app/.next/cache:noexec,nosuid,size=100m
    
    # Health check with production settings
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    
    # Production logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
        compress: "true"
    
    # Production labels for monitoring
    labels:
      - "com.examcraft.environment=production"
      - "com.examcraft.service=frontend"
      - "com.examcraft.version=${VERSION:-latest}"
      - "traefik.enable=true"
      - "traefik.http.routers.examcraft.rule=Host(`examcraft.yourdomain.com`)"
      - "traefik.http.routers.examcraft.tls=true"
      - "traefik.http.routers.examcraft.tls.certresolver=letsencrypt"

  # ---------------------------------------------------------------------------
  # Reverse Proxy (Optional - Nginx for production)
  # ---------------------------------------------------------------------------
  nginx:
    image: nginx:1.25-alpine
    container_name: examcraft-nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      examcraft-frontend:
        condition: service_healthy
    restart: unless-stopped
    
    # Security configurations for Nginx
    security_opt:
      - no-new-privileges:true
    
    # Resource limits for Nginx
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 64M
    
    # Nginx logging
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    
    labels:
      - "com.examcraft.environment=production"
      - "com.examcraft.service=nginx"

# -----------------------------------------------------------------------------
# Production Networks
# -----------------------------------------------------------------------------
networks:
  default:
    name: examcraft-prod-network
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: examcraft-br0
    ipam:
      config:
        - subnet: 172.20.0.0/16

# -----------------------------------------------------------------------------
# Production Volumes
# -----------------------------------------------------------------------------
volumes:
  # Nginx logs volume
  nginx_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./logs/nginx
  
  # SSL certificates volume
  ssl_certs:
    driver: local 